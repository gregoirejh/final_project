extends layout

block head
  // Here will go our css/js links
  script(type="text/javascript" src="/js/d3.v4.min.js" charset="utf-8")
  script(type="text/javascript" src="/js/jquery-3.2.1.min.js" charset="utf-8")
  script(type="text/javascript" src="/js/bootstrap.min.js" charset="utf-8")
  script(type="text/javascript" src="/js/index.js" charset="utf-8")
  link(rel='stylesheet', href='/css/bootstrap.min.css')
  link(rel='stylesheet', href='/css/main.css')
  link(rel='stylesheet', href='/css/bootstrap-theme.min.css')

block content  
  button.btn.btn-danger(href='/logout' onClick='document.location.href="/logout"') Logout
  button.btn.btn-success(href='/addMetrics' onClick='document.location.href="/addMetrics"') Add Metrics !
  select.form-control(class='collections')
  div.container
    div.col-md-12
      h1 #{text}
      button#show-metrics(type="button" class="btn btn-default") Bring my metrics
      div.chartComponent
        svg.chart(width="960" height="500")
      
      
  script 
    :coffee-script
      $('.chart').hide()
      
      $.get '/metrics.json', {}, (data) ->
        collections = data.reduce (acc, item) ->
          collection = item.key.split(':')[1]
          if acc.indexOf(collection) == -1
            acc.push(collection)
          return acc
        , []
        
        $('.collections').empty()

        html = collections.map (collection) ->
          "<option value=" + collection + ">" + collection + "</option>"
        $('.collections').html(html.join(''))

      $('#show-metrics').click (e) ->
        e.preventDefault()
        $.get "/metrics.json", {}, (data) ->



          data.sort((x,y) -> parseInt(x.key.split(':')[2])-parseInt(y.key.split(':')[2]))

          margin = {top: 20, right: 20, bottom: 30, left: 50}
          width = 960 - margin.left - margin.right
          height = 500 - margin.top - margin.bottom

        
          parseTime = d3.timeParse("%Q")

          x = d3.scaleTime().range([0, width])
          y = d3.scaleLinear().range([height, 0])


          valueline = d3.line()
              .x((d) -> return x(d.date))
              .y((d) -> return y(d.value))

          
          svg = d3.select("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform",
                    "translate(" + margin.left + "," + margin.top + ")")

          

          data.forEach((d) ->
              console.log Date(Number.parseInt(d.key.split(':')[2]))
              d.date = parseInt(d.key.split(':')[2]);
              d.value = +d.value;
              return d;
          )
          console.log data
          x.domain(d3.extent(data, (d) -> return d.date))
          y.domain([0, d3.max(data, (d) -> return d.value+1 )])

          svg.append("path")
              .data([data])
              .attr("class", "line")
              .attr("d", valueline)

          svg.append("g")
              .attr("transform", "translate(0," + height + ")")
              .call(d3.axisBottom(x))

          svg.append("g")
              .call(d3.axisLeft(y))

          $('.chart').show()



